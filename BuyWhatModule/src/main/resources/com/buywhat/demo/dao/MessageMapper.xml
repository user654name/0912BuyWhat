<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.buywhat.demo.dao.MessageMapper">



    <select id="selectMessageByConversationId"
            parameterType="java.lang.String"
            resultMap="BaseResultMap" >
        select *
        FROM messagetable
        WHERE conversation_id = #{param}
    </select>


    <!--史上最强SQL语句-->
    <select id="selectConversationByUserId" parameterType="map" resultMap="BaseResultMap">
        SELECT   *    FROM
        (
            SELECT   *    FROM    `messagetable`,
              (
                  SELECT  max(created_date) AS `date`  FROM   messagetable  GROUP BY  conversation_id
                ) AS maxdatetable
             WHERE  messagetable.created_date = maxdatetable.date
        ) AS resulttable
        WHERE
        resulttable.conversation_id LIKE #{before}  ESCAPE '|'
        OR resulttable.conversation_id LIKE #{after}  ESCAPE '|';
    </select>


    <!--Integer countMessageUnreadByConversationId(String conversationId);
    2018年9月16日 22:41:07-->
    <select id="countMessageUnreadByConversationId"
            parameterType="java.lang.String"
            resultType="java.lang.Integer">
        SELECT  count(*)
        FROM messagetable
        WHERE conversation_id = #{conversationId}
        AND has_read = 0
   </select>


    <!--  Integer countMessageByUserId(String conversationId);
    2018年9月16日 22:33:47-->
    <select id="countMessageByConversationId"
            parameterType="java.lang.String"
            resultType="java.lang.Integer">
        SELECT count(*)
        FROM   messagetable
        WHERE conversation_id = #{conversationId}
    </select>


    <resultMap id="BaseResultMap" type="com.buywhat.demo.bean.Message">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="from_id" jdbcType="INTEGER" property="fromId"/>
        <result column="to_id" jdbcType="INTEGER" property="toId"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="has_read" jdbcType="VARCHAR" property="hasRead"/>
        <result column="conversation_id" jdbcType="VARCHAR" property="conversationId"/>
    </resultMap>


    <sql id="Base_Column_List">
    id, from_id, to_id, content, created_date, has_read, conversation_id
  </sql>


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from messagetable
        where id = #{id,jdbcType=INTEGER}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from messagetable
    where id = #{id,jdbcType=INTEGER}
  </delete>


    <insert id="insert" parameterType="com.buywhat.demo.bean.Message">
    insert into messagetable (id, from_id, to_id, 
      content, created_date, has_read, 
      conversation_id)
    values (#{id,jdbcType=INTEGER}, #{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{hasRead,jdbcType=VARCHAR}, 
      #{conversationId,jdbcType=VARCHAR})
  </insert>


    <insert id="insertSelective" parameterType="com.buywhat.demo.bean.Message">
        insert into messagetable
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="fromId != null">
                from_id,
            </if>
            <if test="toId != null">
                to_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
            <if test="hasRead != null">
                has_read,
            </if>
            <if test="conversationId != null">
                conversation_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="fromId != null">
                #{fromId,jdbcType=INTEGER},
            </if>
            <if test="toId != null">
                #{toId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="hasRead != null">
                #{hasRead,jdbcType=VARCHAR},
            </if>
            <if test="conversationId != null">
                #{conversationId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.buywhat.demo.bean.Message">
        update messagetable
        <set>
            <if test="fromId != null">
                from_id = #{fromId,jdbcType=INTEGER},
            </if>
            <if test="toId != null">
                to_id = #{toId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                created_date = #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="hasRead != null">
                has_read = #{hasRead,jdbcType=VARCHAR},
            </if>
            <if test="conversationId != null">
                conversation_id = #{conversationId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.buywhat.demo.bean.Message">
    update messagetable
    set from_id = #{fromId,jdbcType=INTEGER},
      to_id = #{toId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      has_read = #{hasRead,jdbcType=VARCHAR},
      conversation_id = #{conversationId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>